<test v="2.0"><p><t>Programación - UD10 - DAW - Tests</t><d>Gestión de bases de datos: relacionales y orientadas a objetos.</d><a>Francisco Javier Gutiérrez Pérez</a><c>8</c><v/><e>830344915199368</e><r>77469628365307</r></p><f/><c><c><t>0</t><p>En JPA una instancia tiene el estado de gestionada si...</p><c>2111</c><r><o>el motor de persistencia mantiene una referencia interna a la instancia de entidad y cualquier cambio en la misma será sincronizado con el almacén de datos en el siguiente commit.</o><o>el motor de persistencia mantiene una referencia interna a la instancia de entidad justo después de haberla desacoplado o desligado.</o><o>el motor de persistencia no mantiene una referencia interna a la instancia de entidad después de hacer el commit.</o><o>es una instancia de entidad recién creada.</o></r><h>En JPA, una entidad está en el estado de gestionada (o "managed") cuando el contexto de persistencia está rastreando cualquier cambio en esa entidad, y esos cambios se sincronizarán con la base de datos cuando ocurra el próximo commit. Esta es una de las características principales de JPA y ORM (Object-Relational Mapping) en general, ya que permite tratar las entidades como objetos regulares en el código, con la garantía de que cualquier cambio que hagas se reflejará en la base de datos.</h></c><c><t>0</t><p>Para usar JDBC, el programador debe conocer los detalles específicos, al más bajo nivel posible, de cada base de datos.</p><c>12</c><r><o>Verdadero</o><o>Falso</o></r></c><c><t>0</t><p>En JPA una relación uno a uno se realizaría con la anotación...</p><c>2111</c><r><o>@OneToOne</o><o>@OneAndOne</o><o>@OneByOne</o><o>@Relationship(type=EntityRelations.ONE_BY_ONE)</o></r></c><c><t>0</t><p>Un driver contiene una implementación de todas las interfaces del API JDBC.</p><c>21</c><r><o>Verdadero</o><o>Falso</o></r></c><c><t>0</t><p>En una entidad JPA necesitamos indicar que un atributo no puede estar vacío, ¿cómo lo indicamos?</p><c>2111</c><r><o>@Column(nullable=false)</o><o>@Column(compulsory=true)</o><o>@Column(notnull=true)
</o><o>@Column(notcompulsory=false)
</o></r></c><c><t>0</t><p>El lenguaje SQL:</p><c>2111</c><r><o>Es estándar.</o><o>Es propietario, pertenece a Oracle.</o><o>Procede del lenguaje Pascal.</o><o>Ninguna de las respuestas anteriores es correcta.</o></r></c><c><t>0</t><p>La programación de aplicaciones que usan bases de datos ha estado siempre unificada, debido al escaso número de de productos de bases de datos en el mercado.</p><c>12</c><r><o>Verdadero</o><o>Falso</o></r></c><c><t>0</t><p>En el modelo relacional, una tabla consiste en un conjunto de filas y columnas.</p><c>21</c><r><o>Verdadero</o><o>Falso</o></r></c><c><t>0</t><p>Para una conexión a una base de datos usando JDBC, se puede utilizar el método getConnection() de la clase DriverManager.</p><c>21</c><r><o>Verdadero</o><o>Falso</o></r></c><c><t>1</t><p>Señala las afirmaciones correctas, acerca de SQL:</p><c>1221</c><r><o>Es una base de datos gratuita.</o><o>Es un lenguaje no procedimental.</o><o>Permite interactuar con el sistema gestor de la base de datos.</o><o>Es propiedad de MySQL.</o></r></c><c><t>0</t><p>En una entidad JPA necesitamos indicar que tiene una relación uno a muchos con otra entidad. ¿Qué anotación usarías?</p><c>2111</c><r><o>@OneToMany</o><o>@ManyToOne</o><o>@Relationship(type=EntityRelations.ONE_TO_MANY)</o><o>@Basic(relationship=Entity.MANY_TO_ONE)
</o></r></c><c><t>0</t><p>En JPA una instancia tiene el estado de desacoplada o desligada...</p><c>2111</c><r><o>después de ejecutar el método detach del EntityManager.</o><o>después de ejecutar el método merge del EntityManager.</o><o>después de ejecutar el método find del EntityManager..</o><o>después de ejecutar el método clean del EntityManager..</o></r></c><c><t>0</t><p>¿Cuál de los siguientes elementos es un motor de persistencia para JPA?:</p><c>2111</c><r><o>EclipseLink</o><o>EntityManager</o><o>DB4O</o><o>Unidad de persistencia.</o></r></c><c><t>0</t><p>En JPA una instancia tiene el estado de eliminada...</p><c>2111</c><r><o>después de ejecutar el método remove del EntityManager.</o><o>después de ejecutar el método delete del EntityManager.</o><o>después de ejecutar el método detach del EntityManager..</o><o>después de ejecutar el método clean del EntityManager..</o></r></c><c><t>1</t><p>Respecto al conector de la base de datos SQL:</p><c>1221</c><r><o>Consiste en un fichero .tar.</o><o>Permite la comunicación entre el APIJDBC y el SGBD.</o><o>Permite interactuar con el sistema gestor de la base de datos.</o><o>Todas las respuestas anteriores son correctas.</o></r></c><c><t>0</t><p>JDBC inhabilita el módulo que deja ejecutar la línea de comandos de la base de datos que se emplee.</p><c>12</c><r><o>Verdadero</o><o>Falso</o></r></c><c><t>0</t><p>La consulta: s.executeUpdate("UPDATE CLIENTE SET telefono='968610001' WHERE idCLIENTE=3")</p><c>1211</c><r><o>Elimina datos.</o><o>Actualiza datos.</o><o>Añade datos.</o><o>Ninguna de las respuestas anteriores es correcta.</o></r></c><c><t>0</t><p>El desajuste de modelos hace que sea más difícil programar aplicaciones cuando se usa un lenguaje orientado a objetos con una base de datos orientada a objetos.</p><c>12</c><r><o>Verdadero</o><o>Falso</o></r></c><c><t>0</t><p>¿Cuál de las siguientes técnicas requiere de lo que se denomina "motor de persistencia"?</p><c>1121</c><r><o>Almacenamiento directo de archivos.</o><o>Uso directo de un sistema gestor de base de datos orientado a objetos.</o><o>Mapeado de objetos.</o><o>JDBC.</o></r></c><c><t>0</t><p>El código siguiente: Connection con = DriverManager.getConnection ( "jdbc:odbc:miBD", "miLogin", "miPassword");</p><c>1121</c><r><o>Ejecuta una consulta.</o><o>Procesa los resultados de una consulta.</o><o>Establece una conexión.</o><o>Todas las respuestas anteriores son correctas.</o></r></c><c><t>0</t><p>El método wasNull informa sobre si el último valor leído con un método get() es nulo.</p><c>21</c><r><o>Verdadero</o><o>Falso</o></r></c><c><t>0</t><p>Para obtener un entero almacenado en uno de los campos de un registro, trabajando con el ResulSet emplearemos el método:</p><c>1211</c><r><o>getString().</o><o>getInt().</o><o>getDate().</o><o>getRegis().</o></r></c><c><t>0</t><p>Una entidad JPA tiene que cumplir una serie de requisitos, ¿cuál de las siguientes opciones NO es un requisito?</p><c>2111</c><r><o>Las entiodades deben ser abstractas.</o><o>Las entidades deben tener la anotación @Entity.</o><o>Las entidades deben tener un constructor por defecto.</o><o>Las entidades no pueden clases final.</o></r></c><c><t>0</t><p>En JPA, una relación uno a muchos del modelo relacional se representa mediante una colección.</p><c>21</c><r><o>Verdader</o><o>Falso</o></r></c><c><t>0</t><p>El estándar ODMG propone, además del OQL, lenguajes de manipulación y de definición de objetos.</p><c>21</c><r><o>Verdadero</o><o>Falso</o></r></c><c><t>0</t><p>Las conexiones a una base de datos no consumen recursos del sistema.</p><c>12</c><r><o>Verdadero</o><o>Falso</o></r></c><c><t>0</t><p>JDBC tiene el inconveniente de que no permite usar SQL para las consultas a las bases de datos.</p><c>12</c><r><o>Verdadero</o><o>Falso</o></r></c><c><t>0</t><p>¿Cuál de las siguientes sentencias INSERT es la correcta?</p><c>2111</c><r><o>INSERT INTO clase VALUES ('a','b','c')</o><o>INSERT INTO clase VALUES {'a','b','c'}</o><o>INSERT INTO clase (a,b,c,d) VALUES ('a','b','c')</o><o>INSERT INTO clase {a,b,c} VALUES {'a','b','c'}</o></r></c><c><t>0</t><p>Respecto a las consultas de inserción de datos, el método executeUpdate() de JDBC retorna el número de registros insertados.</p><c>21</c><r><o>Verdadero</o><o>Falso</o></r></c></c><i/></test>